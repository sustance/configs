<?php

// Set the year for Julian date conversion
$THIS_YEAR = 2025; 

// Convert Julian day to Gregorian date in YYMMDD format
function julianToGregorian($julianDay, $year) {
    $date = new DateTime("$year-01-01");
    $date->add(new DateInterval('P' . ($julianDay - 1) . 'D'));
    return $date->format('ymd');
}

// Abbreviate names (CHUN -> C, KYM -> K, else first letter)
function abbreviateName($name) {
    $name = strtoupper($name);
    if (strpos($name, 'CHUN') !== false) return 'C';
    if (strpos($name, 'KYM') !== false) return 'K';
    return substr($name, 0, 1);
}

// Process a single line of data
function processLine($line, $year) {
    $line = trim($line);
    
    // Skip empty lines
    if (empty($line)) return $line;
    
    // Default output is the original line
    $outputLine = $line;
    
    // Process lines starting with M1, M2, or __
    if (preg_match('/^(M1|M2|__)([a-zA-Z\/]+)\s+([A-Za-z0-9]+)\s+([a-zA-Z]{6,8})\s+([0-9]+)\s+(\d{3}[a-zA-Z0-9]+)/', $line, $matches)) {
        $name = $matches[2]; // e.g., MICHAEL/KYM
        $route = $matches[4]; // e.g., PVGHKGCX
        $flight = $matches[5]; // e.g., 0377
        $julianData = $matches[6]; // e.g., 226Y072K0220
        
        // Extract Julian day (first 3 digits)
        $julianDay = substr($julianData, 0, 3);
        $gregorianDate = julianToGregorian((int)$julianDay, $year);
        
        // Extract origin, destination, and airline from route
        $origin = substr($route, 0, 3);
        $destination = substr($route, 3, 3);
        $airline = (strlen($route) > 6) ? substr($route, 6, 2) : '';
        
        // Abbreviate name
        $nameParts = explode('/', $name);
        $lastName = end($nameParts);
        $abbreviatedName = abbreviateName($lastName);
        
        // Build output line: CA, CB, CC, CD, CE, CF, CG
        $outputLine = implode(', ', [
            $gregorianDate,    // CA: Gregorian date
            $abbreviatedName,  // CB: Abbreviated name
            $origin,           // CC: Origin airport
            $destination,      // CD: Destination airport
            $airline,          // CE: Airline code
            $flight,           // CF: Flight number
            $julianDay         // CG: Julian day
        ]);
    }
    
    return $outputLine;
}

// Process all data lines
function processData($data, $year) {
    $lines = explode("\n", $data);
    $output = [];
    
    foreach ($lines as $line) {
        $output[] = processLine($line, $year);
    }
    
    return $output;
}

// Sample data (replace with your actual data)
$data = '
__JI/CHUNMS     xxxxxxx zrhbsltr 0000 237z 00
__JI/CHUNMS     xxxxxxx bslzrhtr 0000 237z 00

__MICHAEL/KYMMR xxxxxxx neuzrhtr 0000 236z 00
__JI/CHUNMS     xxxxxxx neuzrhtr 0000 236z 00

__MICHAEL/KYMMR xxxxxxx gvaneutr 0000 234z 00
__JI/CHUNMS     xxxxxxx gvaneutr 0000 234z 00

M1MICHAEL/KYMMR EMBNSVS DXBGVAEK 0089 234J005F0174 33F>60B1GO5233BEK 2A17623888216860 EK 766969313 40K ^1  
M1JI/CHUNMS     EMBNSVS DXBGVAEK 0089 234J005E0173 34C>6182GO5233BEK 01765529570022A17623888216840 EK 770552392 40K ^1  

M1MICHAEL/KYMMR EMBNSVS HKGDXBEK 0381 234J019J0260 33F>60B1GO5233BEK 2A17623888216860 EK 766969313 40K ^1  
M1JI/CHUNMS     EMBNSVS HKGDXBEK 0381 234J019G0259 34C>6182GO5233BEK 01765529570022A17623888216840 EK 770552392 40K ^1  

M1MICHAEL/KYM ECY7P9W PVGHKGCX 0377 226Y072K0220 34B>6180 O5226BCX 2A16072783421340 CX CX 1078165297 N8AM
M1JI/CHUN ECY7P9W PVGHKGCX 0377 226Y072H0221 34B>6180 O5226BCX 2A16072783421350 CX CX 1022433862 N8AM

M1MICHAEL/KYM EME7GTB PEKSHACA 1515 224P038F0262 15D>8181OO5224BCA 2A999252594825600CA LH 992225022757127 20KN*80600000K0900LHS    
M1JI/CHUN EME7GTB PEKSHACA 1515 224P038E0258 15D>8182OO5224BCA 2A999252594825500CA LH 992227673319868 20KN*80600000K0900LHS   

__MICHAEL/KYM HNNKK4L SHAPEKCA 1520 222Y054D SHA267 000
__JI/CHUN HNNKK4L SHAPEKCA 1520 222Y054C SHA267 000

M1MICHAEL/KYM ECY88OR HKGPVGCX 0380 217Y073G0223 34B>6180 K5217BCX 2A16072783421290 CX CX 1078165297 N8AM
M1JI/CHUN ECY88OR HKGPVGCX 0380 217Y072H0222 34B>6180 K5217BCX 2A16072783421300 CX CX 1022433862 N8AM

M1MICHAEL/KYM EF8R8OT PVGHKGCX 0377 206Y052E0240 34B>6180 O5206BCX 2A16030861023770 CX CX 1078165297 N8AM
M1JI/CHUN EF8R8OT PVGHKGCX 0377 206Y052F0239 34B>6180 O5206BCX 2A16030861023780 CX CX 1022433862 N8AM

M1MICHAEL/KYM EF8R8OT HKGPVGCX 0380 197Y040K0209 34B>6180 O5197BCX 2A16030861023770 CX CX 1078165297 N8AM
M1JI/CHUN EF8R8OT HKGPVGCX 0380 197Y040H0210 34B>6180 O5197BCX 2A16030861023780 CX CX 1022433862 N8AM

M1MICHAEL/KYM EMVL3SF TPEHKGHX 0255 171Q033J0138 147>3181OO5171BHX 29851211768966602HX HU 3519793682 2PC
M1JI/CHUN EMVL3SF TPEHKGHX 0255 171Q033H0137 147>3182OO5171BHX 29851211768966502HX HU 3519793660 2PC

__MICHAEL/KYM ENDM62T SHATSAMU 5097 169Z073C0201 100 00
__JI/CHUN ENDM62T SHATSAMU 5097 169Z073A0200 100 000

M1MICHAEL/KYM EEY493J HKGPVGCX 0380 163Y051C0162 34B>6180 K5163BCX 2A16021222895780 CX CX 1078165297 N8AM
M1JI/CHUN EEY2GBD HKGPVGCX 0380 163Y051D0161 34B>6180 K5163BCX 2A16021222895770 CX CX 1022433862 N8AM

M1MICHAEL/KYM E3E8KZL SINHKGCX 0758 149Y073E0319 34B>6180 O5149BCX 2A16073070824830 CX CX 1078165297 N8AM
M1JI/CHUN E3E8KZL SINHKGCX 0758 149Y073G0318 34B>6180 O5149BCX 2A16073070824820 CX CX 1022433862 N8AM

M1MICHAEL/KYM EQE1YYT PVGSINMU 0565 145V041L0238 100 000
M1JI/CHUN EQE1YYT PVGSINMU 0565 145V047H0239 100 000

M1MICHAEL/KYM EMGQ42Z PEKSHAMU 5122 139T071G0290 100 000
M1JI/CHUN EMGQ42Z PEKSHAMU 5122 139T071F0291 100 000

M1MICHAEL/KYM E5VBDQ5 HKGPEKCX 0336 135Y075G0266 34B>6180 K5135BCX 2A16054727421230 CX CX 1078165297 N8AM
M1JI/CHUN E5VBDQ5 HKGPEKCX 0336 135Y075E0267 34B>6180 K5135BCX 2A16054727421240 CX CX 1022433862 N8AM

M2MICHAEL/KYM 5SET99 CDGHKGAF 0188 125J008D0225 32C2A07464094800510 DL 2657464851 Y
__JI/CHUN xxxxxxx CDGHKGAF 0188 125z 000 000 000

M2MICHAEL/KYM E5SET99 ZAGCDGAF 1161 125C001A0075 348>5181 O BAF 2A07464094800510 DL 2657464851
__JI/CHUN xxxxxxx ZAGCDGAF 1161 125z 000 000 000

M1MICHAEL/KYM E4HOEJS ZRHZAGOU 0461 121M015F0052 377>8320 O BLX 2A83172306474960 OU LH 992225022757127 N*30600000K09 LHS
__JI/CHUN xxxxxxx ZRHZAGOU 0461 121z 000 000

M1MICHAEL/KYM E4HOEJS ZAGZRHOU 0464 114M016A0045 377>8320 5114BOU 2A83172306474960 OU LH 992225022757127 N*30600000K09 LHS
__JI/CHUN xxxxxxx ZAGZRHOU 0464 114z 000 000

M2MICHAEL/KYM Y5SET99 AMSZAGOU 0451 111C002C0065 32C2A07464094800510 LH 992225022757127 N
__JI/CHUN xxxxxxx AMSZAGOU 0451 111z 000 000

M2MICHAEL/KYM E5SET99 HKGAMSKL 0888 110C007G0244 348>5181 O BAF 2A07464094800510 DL 2657464851
__JI/CHUN xxxxxxx HKGAMSKL 0888 110z 000 000

M2MICHAEL/KYM YMCYHLP CDGHKGAF 0188 092J014D0250 32C2A05723339667850 DL 2657464851 Y
M2JI/CHUN EMCYHLP CDGHKGAF 0188 092J004D0249 32C2A05723339667840 DL 6682097537 Y

M2MICHAEL/KYM EMCYHLP ZRHCDGAF 1815 092C002D0100 348>5181 O BAF 2A05723339667850 DL 2657464851 YMCYHLP 
M2JI/CHUN EMCYHLP ZRHCDGAF 1815 092C002F0099 348>5182 O BAF 2A05723339667840 DL 6682097537 YMCYHLP 

M2MICHAEL/KYM YMCYHLP CDGZRHAF 1114 085C004F0061 32C2A05723339667850 DL 2657464851 Y
M2JI/CHUN YMCYHLP CDGZRHAF 1114 085C004D0060 32C2A05723339667840 DL 6682097537 Y

M2MICHAEL/KYM EMCYHLP HKGCDGAF 0185 084J004H0247 348>5181 O BAF 2A05723339667850 DL 2657464851 
M2JI/CHUN EMCYHLP HKGCDGAF 0185 084J004D0246 348>5182 O BAF 2A05723339667840 DL 6682097537 

M1MICHAEL/KYM EMFZS3Q PVGHKGMU 0509 080T055J0137 10 000
M1JI/CHUN EMFZS3Q PVGHKGMU 0509 080T055C0138 100 000

M1MICHAEL/KYM E58EAHF BKKPVGTG 0664 075Y060B0317 37F>8320 B 2A 0 TG LH 992225022757127 N*30600000K09 LHS 1005S
M1JI/CHUN E58EAHF BKKPVGTG 0664 075Y060A0318 37F>8320 B 2A 0 TG LH 992227673319868 N*30600000K09 LHS 1005S

M1MICHAEL/KYM E5873MR TPEBKKTG 0633 071Y069C0155 365>5180 5071B1A 2A21735072421730 TG LH 992225022757127 N*30600000K09 LHS 1325S
M1JI/CHUN E5873MR TPEBKKTG 0633 071Y069D0154 365>5180 5071B1A 2A21735072421720 TG LH 992227673319868 N*30600000K09 LHS 1325S

M1MICHAEL/KYM E589S4F HKGTPEBR 0870 069Y024B0155 377>8320 O5069BBR 0695664482001 2A69554723866650 BR LH 992225022757127 N*30601019K09 LHS
M1JI/CHUN E589S4F HKGTPEBR 0870 069Y024A0156 377>8320 O5069BBR 0695664487001 2A69554723866640 BR LH 992227673319868 N*30601018K09 LHS

M1MICHAEL/KYM E5I3GVN SINSZXZH 0230 050Y049C0286 37E>8320 O5046BSQ 0618631764001 2A61824605219600 SQ LH 992225022757127 N*80601019K09 LHS
M1JI/CHUN EMJS3SW SINSZXZH 0230 050P007B0108 35C>3182OO5050BZH 347962774900129479640287547602ZH LH 992227673319868 2PC*30601019K0911LHS

M1MICHAEL/KYM E5I3GVN TPESINSQ 0879 046Y049C0286 37E>8320 O5046BSQ 0618631764001 2A61824605219600 SQ LH 992225022757127 N*80601019K09 LHS
M1JI/CHUN E5I3GVN TPESINSQ 0879 046Y049B0285 37E>8320 O5046BSQ 0618631764001 2A61824605219610 SQ LH 992227673319868 N*80601019K09 LHS

M1MICHAEL/KYM E5HZLCV HKGTPEBR 0870 043Y033H0125 377>8320 O5043BBR 0695630186001 2A69554723068690 BR N*30601013K09
M1JI/CHUN E5HZLCV HKGTPEBR 0870 043Y033C0126 377>8320 O5043BBR 0695630219001 2A69554723068700 BR N*30601018K09

M1MICHAEL/KYM E5FEUTY SINHKGSQ 0896 017Y045C0197 37E>8320 K5917BSQ ^ 2A61664597199480 SQ xde jjcb\acchfhbch ,WIAGACAAA&AJ 7$ BB
__JI/CHUN xxxxxxx SINHKGSQ 0896 017z 000 000

M1MICHAEL/KYM E5FEUVY HKGSINSQ 0893 013Y057D0214 37E>8320 O5013BSQ 06181589170010618158935001 2A61824597199480 SQ LH 992225022757127 N*80602026K09
__JI/CHUN xxxxxxx HKGSINSQ 0893 013z 000 000

M1MICHAEL/KYM E6IPVLI PVGHKGCX 0377 008Y073D0177 34B>6180 O5008BCX 2A16035702022100 CX CX 1078165297 N8AM
__JI/CHUN xxxxxxx PVGHKGCX 0377 008z 000 000 008 000 00

M1MICHAEL/KYM E2ZR5MV HKGPVGCX 0380 002Y059C0068 34B>6180 K5002BCX 2A16071679720010 CX CX 1078165297 N8AM
__JI/CHUN xxxxxxx HKGPVGCX 0380 002Z 000
';

// Process the data
$output = processData($data, $THIS_YEAR);

// Output results (unchanged from original)
echo "<pre> Date ,Who Frm, To , By, Flgt, doy\n__________________________________";
foreach ($output as $line) {
    echo "$line\n";
}

echo "\nNote airline 'tr' is a train trip\nTotal lines processed: " . count($output) . "\n</p";

// Optional: Save processed data to CSV for use with your second dataset
function saveToCsv($output, $filename) {
    $file = fopen($filename, 'w');
    foreach ($output as $line) {
        // Only write lines that were processed (contain commas)
        if (strpos($line, ',') !== false) {
            fputcsv($file, explode(', ', $line));
        }
    }
    fclose($file);
}

// Uncomment the next line to save the processed data to a CSV file
saveToCsv($output, 'iata25out.csv');

?>
